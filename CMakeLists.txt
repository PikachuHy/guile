cmake_minimum_required(VERSION 3.16)
project(guile VERSION 1.8.8 LANGUAGES C)
set(GUILE_MAJOR_VERSION ${guile_VERSION_MAJOR})
set(GUILE_MINOR_VERSION ${guile_VERSION_MINOR})
set(GUILE_MICRO_VERSION ${guile_VERSION_PATCH})
set(CMAKE_C_STANDARD 90)
include(CheckTypeSize)
check_type_size("char" SIZEOF_CHAR)
check_type_size("float" SIZEOF_FLOAT)
check_type_size("int" SIZEOF_INT)
check_type_size("intmax_t" SIZEOF_INTMAX_T)
check_type_size("intptr_t" SIZEOF_INTPTR_T)
check_type_size("long" SIZEOF_LONG)
check_type_size("long long" SIZEOF_LONG_LONG)
check_type_size("off_t" SIZEOF_OFF_T)
check_type_size("ptrdiff_t" SIZEOF_PTRDIFF_T)
check_type_size("short" SIZEOF_SHORT)
check_type_size("size_t" SIZEOF_SIZE_T)
check_type_size("uintptr_t" SIZEOF_UINTPTR_T)
check_type_size("unsigned char" SIZEOF_UNSIGNED_CHAR)
check_type_size("unsigned int" SIZEOF_UNSIGNED_INT)
check_type_size("unsigned long" SIZEOF_UNSIGNED_LONG)
check_type_size("unsigned long long" SIZEOF_UNSIGNED_LONG_LONG)
check_type_size("unsigned short" SIZEOF_UNSIGNED_SHORT)
check_type_size("unsigned __int64" SIZEOF_UNSIGNED___INT64)
check_type_size("void *" SIZEOF_VOID_P)
check_type_size("__int64" SIZEOF___INT64)
check_type_size("complex double" SIZEOF_COMPLEX_DOUBLE)
if(NOT SIZEOF___INT64)
    set(SIZEOF___INT64 0)
endif()
if(NOT SIZEOF_UNSIGNED___INT64)
    set(SIZEOF_UNSIGNED___INT64 0)
endif()
if(SIZEOF_COMPLEX_DOUBLE)
    set(HAVE_COMPLEX_DOUBLE 1)
endif()
include (CheckIncludeFile)
check_include_file (alloca.h HAVE_ALLOCA_H)
check_include_file (complex.h HAVE_COMPLEX_H)
check_include_file (crt_externs.h HAVE_CRT_EXTERNS_H)
check_include_file (crypt.h HAVE_CRYPT_H)
check_include_file (utime.h HAVE_UTIME_H)
check_include_file (assert.h HAVE_ASSERT_H)
check_include_file (stdint.h HAVE_STDINT_H)
check_include_file (stdlib.h HAVE_STDLIB_H)
check_include_file (strings.h HAVE_STRINGS_H)
check_include_file (string.h HAVE_STRING_H)
check_include_file (regex.h HAVE_REGEX_H)
check_include_file (unistd.h HAVE_UNISTD_H)
check_include_file (sys/dir.h HAVE_SYS_DIR_H)
check_include_file (sys/file.h HAVE_SYS_FILE_H)
check_include_file (sys/ioctl.h HAVE_SYS_IOCTL_H)
check_include_file (sys/ndir.h HAVE_SYS_NDIR_H)
check_include_file (sys/param.h HAVE_SYS_PARAM_H)
check_include_file (sys/resource.h HAVE_SYS_RESOURCE_H)
check_include_file (sys/select.h HAVE_SYS_SELECT_H)
check_include_file (sys/stat.h HAVE_SYS_STAT_H)
check_include_file (sys/stdtypes.h HAVE_SYS_STDTYPES_H)
check_include_file (sys/timeb.h HAVE_SYS_TIMEB_H)
check_include_file (sys/times.h HAVE_SYS_TIMES_H)
check_include_file (sys/time.h HAVE_SYS_TIME_H)
check_include_file (sys/types.h HAVE_SYS_TYPES_H)
check_include_file (sys/utime.h HAVE_SYS_UTIME_H)
check_include_file (sys/utsname.h HAVE_SYS_UTSNAME_H)
check_include_file (sys/wait.h HAVE_SYS_WAIT_H)
include (CheckFunctionExists)
check_function_exists (acosh HAVE_ACOSH)
check_function_exists (alloca HAVE_ALLOCA)
check_function_exists (asinh HAVE_ASINH)
check_function_exists (atanh HAVE_ATANH)
check_function_exists (atexit HAVE_ATEXIT)
check_function_exists (bcopy HAVE_BCOPY)
check_function_exists (cexp HAVE_CEXP)
check_function_exists (chown HAVE_CHOWN)
check_function_exists (chroot HAVE_CHROOT)
check_function_exists (chsize HAVE_CHSIZE)
check_function_exists (clog HAVE_CLOG)
check_function_exists (clog10 HAVE_CLOG10)
check_function_exists (connect HAVE_CONNECT)
check_function_exists (copysign HAVE_COPYSIGN)
check_function_exists (crypt HAVE_CRYPT)
check_function_exists (ctermid HAVE_CTERMID)
check_function_exists (cuserid HAVE_CUSERID)
check_function_exists (dcgettext HAVE_DCGETTEXT)
check_function_exists (cuserid HAVE_DECL_CUSERID)
check_function_exists (flock HAVE_DECL_FLOCK)
check_function_exists (cexp HAVE_CEXP)
check_function_exists (strchr HAVE_STRCHR)
check_function_exists (strcmp HAVE_STRCMP)
check_function_exists (strdup HAVE_STRDUP)
check_function_exists (strerror HAVE_STRERROR)
check_function_exists (strftime HAVE_STRFTIME)
check_function_exists (strncasecmp HAVE_STRNCASECMP)
check_function_exists (strptime HAVE_STRPTIME)
check_function_exists (rename HAVE_RENAME)
check_function_exists (rindex HAVE_RINDEX)
check_function_exists (rmdir HAVE_RMDIR)
check_function_exists (select HAVE_SELECT)
check_function_exists (setegid HAVE_SETEGID)
check_function_exists (seteuid HAVE_SETEUID)
check_function_exists (setgroups HAVE_SETGROUPS)
check_function_exists (sethostent HAVE_SETHOSTENT)
check_function_exists (sethostname HAVE_SETHOSTNAME)
check_function_exists (setitimer HAVE_SETITIMER)
check_function_exists (setlocale HAVE_SETLOCALE)
check_function_exists (setnetent HAVE_SETNETENT)
check_function_exists (setpgid HAVE_SETPGID)
check_function_exists (setpriority HAVE_SETPRIORITY)
check_function_exists (setprotoent HAVE_SETPROTOENT)
check_function_exists (setpwent HAVE_SETPWENT)
check_function_exists (setservent HAVE_SETSERVENT)
check_function_exists (setsid HAVE_SETSID)
check_function_exists (sigaction HAVE_SIGACTION)
check_function_exists (siginterrupt HAVE_SIGINTERRUPT)
# TODO: Check?
set(SCM_I_GSC_GUILE_DEBUG 0)
set(SCM_I_GSC_GUILE_DEBUG_FREELIST 0)
set(SCM_I_GSC_ENABLE_DISCOURAGED 1)
set(SCM_I_GSC_ENABLE_DEPRECATED 1)
set(SCM_I_GSC_ENABLE_ELISP 1)
set(SCM_I_GSC_STACK_GROWS_UP 0)
set(SCM_I_GSC_C_INLINE "inline")
set(SCM_I_GSC_NEEDS_STDINT_H 1)
set(SCM_I_GSC_NEEDS_INTTYPES_H 0)
set(SCM_I_GSC_T_INT8 "int8_t")
set(SCM_I_GSC_T_UINT8 "uint8_t")
set(SCM_I_GSC_T_INT16 "int16_t")
set(SCM_I_GSC_T_UINT16 "uint16_t")
set(SCM_I_GSC_T_INT32 "int32_t")
set(SCM_I_GSC_T_UINT32 "uint32_t")
set(SCM_I_GSC_T_INT64 "int64_t")
set(SCM_I_GSC_T_UINT64 "uint64_t")
set(SCM_I_GSC_T_INTMAX "intmax_t")
set(SCM_I_GSC_T_UINTMAX "uintmax_t")
set(SCM_I_GSC_T_PTRDIFF "ptrdiff_t")
set(SCM_I_GSC_USE_PTHREAD_THREADS 1)
set(SCM_I_GSC_USE_NULL_THREADS 0)
set(SCM_I_GSC_NEED_BRACES_ON_PTHREAD_ONCE_INIT 0)
set(SCM_I_GSC_NEED_BRACES_ON_PTHREAD_MUTEX_INITIALIZER 0)
set(SCM_I_GSC_HAVE_STRUCT_DIRENT64 1)
include_directories(${CMAKE_BINARY_DIR})
include_directories(${CMAKE_SOURCE_DIR})
configure_file (${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
configure_file (${CMAKE_SOURCE_DIR}/libguile/gen-scmconfig.h.cmake ${CMAKE_BINARY_DIR}/libguile/gen-scmconfig.h)
configure_file (${CMAKE_SOURCE_DIR}/libguile/version.h.cmake ${CMAKE_BINARY_DIR}/libguile/version.h)
add_subdirectory(libguile)
add_subdirectory(examples)
add_executable(guile-main main.c)
target_link_libraries(guile-main guile)